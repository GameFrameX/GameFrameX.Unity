
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using LuBan.Runtime;
using GameFrameX.Config;
using SimpleJSON;

namespace Hotfix.Config
{
    /// <summary>
    /// 属性
    /// </summary>
    public sealed partial class Property : LuBan.Runtime.BeanBase
    {
        public Property(int PhysicalAttack, int MagicAttack, int PhysicalDefense, int MagicDefense, int Life, int Crit, int BurstDamage, int Precise, int Block) 
        {
            this.PhysicalAttack = PhysicalAttack;
            this.MagicAttack = MagicAttack;
            this.PhysicalDefense = PhysicalDefense;
            this.MagicDefense = MagicDefense;
            this.Life = Life;
            this.Crit = Crit;
            this.BurstDamage = BurstDamage;
            this.Precise = Precise;
            this.Block = Block;
            PostInit();
        }

        public Property(JSONNode _buf)
        {
            { if(!_buf["PhysicalAttack"].IsNumber) { throw new SerializationException(); }  PhysicalAttack = _buf["PhysicalAttack"]; }
            { if(!_buf["MagicAttack"].IsNumber) { throw new SerializationException(); }  MagicAttack = _buf["MagicAttack"]; }
            { if(!_buf["PhysicalDefense"].IsNumber) { throw new SerializationException(); }  PhysicalDefense = _buf["PhysicalDefense"]; }
            { if(!_buf["MagicDefense"].IsNumber) { throw new SerializationException(); }  MagicDefense = _buf["MagicDefense"]; }
            { if(!_buf["Life"].IsNumber) { throw new SerializationException(); }  Life = _buf["Life"]; }
            { if(!_buf["Crit"].IsNumber) { throw new SerializationException(); }  Crit = _buf["Crit"]; }
            { if(!_buf["burstDamage"].IsNumber) { throw new SerializationException(); }  BurstDamage = _buf["burstDamage"]; }
            { if(!_buf["precise"].IsNumber) { throw new SerializationException(); }  Precise = _buf["precise"]; }
            { if(!_buf["block"].IsNumber) { throw new SerializationException(); }  Block = _buf["block"]; }

            // Localization Key Begin
            // Localization Key End
            PostInit();
        }

        public static Property DeserializeProperty(JSONNode _buf)
        {
            return new Property(_buf);
        }

        /// <summary>
        /// 物理攻击
        /// </summary>
        public int PhysicalAttack { private set; get; }
        /// <summary>
        /// 魔法攻击
        /// </summary>
        public int MagicAttack { private set; get; }
        /// <summary>
        /// 物理防御
        /// </summary>
        public int PhysicalDefense { private set; get; }
        /// <summary>
        /// 魔法防御
        /// </summary>
        public int MagicDefense { private set; get; }
        /// <summary>
        /// 生命值
        /// </summary>
        public int Life { private set; get; }
        /// <summary>
        /// 暴击
        /// </summary>
        public int Crit { private set; get; }
        /// <summary>
        /// 爆伤
        /// </summary>
        public int BurstDamage { private set; get; }
        /// <summary>
        /// 精准
        /// </summary>
        public int Precise { private set; get; }
        /// <summary>
        /// 格挡
        /// </summary>
        public int Block { private set; get; }
        public const int __ID__ = -928497163;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef(TablesComponent tables)
        {
            
            
            
            
            
            
            
            
            
        }

        public void TranslateText(System.Func<string, string, string> translator)
        {
        }

        public override string ToString()
        {
            return "{ "
            + "PhysicalAttack:" + PhysicalAttack + ","
            + "MagicAttack:" + MagicAttack + ","
            + "PhysicalDefense:" + PhysicalDefense + ","
            + "MagicDefense:" + MagicDefense + ","
            + "Life:" + Life + ","
            + "Crit:" + Crit + ","
            + "burstDamage:" + BurstDamage + ","
            + "precise:" + Precise + ","
            + "block:" + Block + ","
            + "}";
        }

        partial void PostInit();
    }
}
